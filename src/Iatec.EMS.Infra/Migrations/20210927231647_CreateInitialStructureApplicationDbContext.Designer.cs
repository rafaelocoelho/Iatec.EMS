// <auto-generated />
using System;
using Iatec.EMS.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Iatec.EMS.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210927231647_CreateInitialStructureApplicationDbContext")]
    partial class CreateInitialStructureApplicationDbContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Iatec.EMS.Domain.Entities.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("evt_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE")
                        .HasColumnName("evt_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(240)")
                        .HasColumnName("evt_descri");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("evt_local");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("evt_name");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("evt_type");

                    b.HasKey("Id")
                        .HasName("pk_evt_id");

                    b.ToTable("ems_event");
                });

            modelBuilder.Entity("Iatec.EMS.Domain.Entities.EventParticipant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ept_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("EventId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ept_evt_id");

                    b.Property<long?>("EventId1")
                        .HasColumnType("BIGINT");

                    b.Property<long>("UserId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("evt_usr_id");

                    b.Property<long?>("UserId1")
                        .HasColumnType("BIGINT");

                    b.HasKey("Id")
                        .HasName("pk_ept_id");

                    b.HasIndex("EventId");

                    b.HasIndex("EventId1");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("ems_eveprt");
                });

            modelBuilder.Entity("Iatec.EMS.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("usr_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("DATE")
                        .HasColumnName("usr_birthd");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(180)")
                        .HasColumnName("usr_email");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("usr_gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("usr_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("usr_passwd");

                    b.HasKey("Id")
                        .HasName("pk_usr_id");

                    b.ToTable("ems_user");
                });

            modelBuilder.Entity("Iatec.EMS.Domain.Entities.EventParticipant", b =>
                {
                    b.HasOne("Iatec.EMS.Domain.Entities.Event", null)
                        .WithMany("EventParticipants")
                        .HasForeignKey("EventId")
                        .HasConstraintName("fk_ept_evt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iatec.EMS.Domain.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId1");

                    b.HasOne("Iatec.EMS.Domain.Entities.User", null)
                        .WithMany("EventParticipants")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_ept_usr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iatec.EMS.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Iatec.EMS.Domain.Entities.Event", b =>
                {
                    b.Navigation("EventParticipants");
                });

            modelBuilder.Entity("Iatec.EMS.Domain.Entities.User", b =>
                {
                    b.Navigation("EventParticipants");
                });
#pragma warning restore 612, 618
        }
    }
}
